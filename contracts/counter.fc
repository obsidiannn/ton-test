#include "imports/stdlib.fc";

;; cell 存储的都是定长且有序的数据，所以读数据也需要有序
(int) load_data() inline {
    ;; 获取data并通过转换
    var ds = get_data().begin_parse();
    return ds~load_uint(32);
}

() save_data(int counter) impure inline {
    cell c = begin_cell().store_uint(counter,32).end_cell();
    set_data(c);
}

() recv_internal(int msg_value,cell in_msg,slice in_msg_body) impure {
    if(in_msg_body.slice_empty?()){
        return ();
    }
    int op = in_msg_body~load_uint(32);
    var counter = load_data();
    if(op == 1){
        save_data(counter + 1);
    }
}

int counter () method_id {
    var (count) = load_data();
    return count;
}